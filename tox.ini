[tox]
envlist = py39, py310, py311, py312, lint, format, docs
isolated_build = True
skip_missing_interpreters = True

[testenv]
deps =
    -r requirements.txt
    -r requirements-dev.txt
commands =
    python -m pytest tests/ -v --cov=explainstack --cov-report=term-missing --cov-report=html
    python -m pytest tests/ --cov=explainstack --cov-report=xml

[testenv:py39]
basepython = python3.9
deps = {[testenv]deps}

[testenv:py310]
basepython = python3.10
deps = {[testenv]deps}

[testenv:py311]
basepython = python3.11
deps = {[testenv]deps}

[testenv:py312]
basepython = python3.12
deps = {[testenv]deps}

[testenv:lint]
deps =
    -r requirements-dev.txt
commands =
    flake8 explainstack/ tests/ --max-line-length=100 --extend-ignore=E203,W503
    mypy explainstack/ --ignore-missing-imports
    bandit -r explainstack/ -f json -o bandit-report.json
    safety check --json --output safety-report.json

[testenv:format]
deps =
    -r requirements-dev.txt
commands =
    black --check --diff explainstack/ tests/
    isort --check-only --diff explainstack/ tests/
    python -c "import ast; [ast.parse(open(f).read()) for f in __import__('glob').glob('explainstack/**/*.py', recursive=True)]"

[testenv:format-fix]
deps =
    -r requirements-dev.txt
commands =
    black explainstack/ tests/
    isort explainstack/ tests/

[testenv:docs]
deps =
    -r requirements.txt
    -r requirements-dev.txt
    mkdocs
    mkdocs-material
commands =
    mkdocs build

[testenv:docs-serve]
deps = {[testenv:docs]deps}
commands =
    mkdocs serve

[testenv:security]
deps =
    -r requirements-dev.txt
commands =
    bandit -r explainstack/ -f json -o bandit-report.json
    safety check --json --output safety-report.json
    semgrep --config=auto explainstack/

[testenv:coverage]
deps = {[testenv]deps}
commands =
    python -m pytest tests/ --cov=explainstack --cov-report=html --cov-report=term-missing --cov-report=xml
    coverage report --fail-under=80

[testenv:integration]
deps = {[testenv]deps}
commands =
    python -m pytest tests/ -m integration -v

[testenv:unit]
deps = {[testenv]deps}
commands =
    python -m pytest tests/ -m "not integration" -v

[testenv:performance]
deps = {[testenv]deps}
commands =
    python -m pytest tests/ -m performance -v --benchmark-only

[testenv:all]
deps = {[testenv]deps}
commands =
    {[testenv:lint]commands}
    {[testenv:format]commands}
    {[testenv:coverage]commands}
    {[testenv:security]commands}

[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv,
    .pytest_cache,
    .mypy_cache,
    htmlcov,
    .coverage

[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
ignore_missing_imports = True

[bandit]
exclude_dirs = tests
skips = B101, B601

[safety]
ignore = 51457
